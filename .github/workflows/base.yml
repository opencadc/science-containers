name: Build & Push skaha/base

on:
  schedule:
    # 3AM Sunday
    - cron: "0 3 * * 0"
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - 'science-containers/Dockerfiles/base/**'
      - '.github/workflows/base.yml'

permissions:
  contents: read

env:
  REGISTRY: images.canfar.net
  IMAGE: skaha/base
  

jobs:
  build:
    if: ${{ github.repository == 'opencadc/science-containers' }}
    name: Build & Push Base Containers
    runs-on: ubuntu-latest
    permissions:
      attestations: write # Attest the build provenance
      id-token: write # Generate OIDC token for cosign
    strategy:
      matrix:
        ubuntu-version: ['20.04', '22.04', '24.04']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        platform: ['linux/amd64']
      max-parallel: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          registry: images.canfar.net
          username: ${{ secrets.CANFAR_HARBOR_ROBOT_PUBLISHER_USERNAME }}
          password: ${{ secrets.CANFAR_HARBOR_ROBOT_PUBLISHER_SECRET }}
      
      - name: Build & Push Production Image
        uses: docker/build-push-action@v3
        id: build
        with:
          context: science-containers/Dockerfiles/base
          file: science-containers/Dockerfiles/base/Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu-version }}
            PYTHON_VERSION=${{ matrix.python-version }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ matrix.ubuntu-version }}-py${{ matrix.python-version }}
          labels:
            org.opencontainers.image.title=${{ env.IMAGE }}
            org.opencontainers.image.description='CADC Base Image'
            org.opencontainers.image.version=${{ matrix.ubuntu-version }}-py${{ matrix.python-version }}
            org.opencontainers.image.source=https://github.com/opencadc/science-containers
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Attest Image
        id: attest
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          # push-to-registry: true
          show-summary: true
      - name: Install Cosign
        id: install-cosign
        uses: sigstore/cosign-installer@v3.8.2
        with:
          cosign-release: 'v2.4.3'
      - name: Cosign Container Image
        id: cosign
        run: |
          cosign version
          cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE }}@${{ steps.build.outputs.digest }} --upload
