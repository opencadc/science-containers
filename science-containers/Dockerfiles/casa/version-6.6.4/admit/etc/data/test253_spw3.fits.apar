# -*- python -*-

def pos253(i):
    """ return key positions in N253 (1..10) from Meier's Table 2:
         0 = blank, if you want to use the peak in the cube
        11 = map center, the reference position of N253
    """
    pos = [ [],                                     # 0 = blank
            ['00h47m33.041s',	'-25d17m26.61s'	],  # pos 1
            ['00h47m32.290s',	'-25d17m19.10s'	],  #     2
            ['00h47m31.936s',	'-25d17m29.10s'	],  #     3
            ['00h47m32.792s',	'-25d17m21.10s'	],  #     4
            ['00h47m32.969s',	'-25d17m19.50s'	],  #     5
            ['00h47m33.159s',	'-25d17m17.41s'	],  #     6
            ['00h47m33.323s',	'-25d17m15.50s'	],  #     7
            ['00h47m33.647s',	'-25d17m13.10s'	],  #     8
            ['00h47m33.942s',	'-25d17m11.10s'	],  #     9
            ['00h47m34.148s',	'-25d17m12.30s'	],  # pos 10
            ['00h47m33.100s',   '-25d17m17.50s' ],  # map reference 
          ]
    return pos[i]


linebdp = [True, True, True]
#linebdp = [True, False, False]

reflist = 'etc/ngc253_lines.list'


#    no proper beam for SFind2D
# contsub = []

#robust   = ['fit-half']
#stop = 'cubestats'


#  make an OI (overlap integral) and PCA if enough lines
minOI = 3

maxpos = pos253(1)+pos253(2)+pos253(3)+pos253(4)+pos253(5)+pos253(6)+pos253(7)+pos253(8)+pos253(9)+pos253(10)
